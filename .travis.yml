# 언어와 jdk의 버전을 지정한다.
language: java
jdk:
  - openjdk11

# 어느 브랜치가 push 될 때 수행할지 지정한다. 
# 오직 main 브랜치가 push될 때 수행하도록 지정하였다.
branches:
  only:
    - main

# 빌드 전에 gradlew의 권한을 추가한다.
before_install:
  - chmod +x gradlew

# Travis CI 서버의 Home
# gradle을 통하여 의존성을 받게 되면 이를 캐시하여 배포할 때 마다 다시 받지 않도록 설정한다.
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# main 브랜치에 push 되면 수행되는 명령어이다. 
# 프로젝트 내에 권한이 추가된 gradlew를 활용하여 clean, build를 진행한다.
script: "./gradlew clean build"

before_deploy:
  - zip -r spring-pet-clinic * 
  - mkdir -p deploy
  - mv spring-pet-clinic.zip deploy/spring-pet-clinic.zip

deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY      # travis repo setting 설정 값
    secret_access_key: $AWS_SECRET_KEY  # travis repo setting 설정 값
    bucket : cdsusr67       # S3 버킷
    region: eu-west-1       
    skip_cleanup: true
    acl: private            # zip 파일 권한
    local_dir: deploy       # before_deploy 에서 생성한 dir
    wait-until-deployed: true
    on:                     # 해당 라인 추가 ***
      all_branches: true    # master 브랜치 말고도 다른 브랜치에도 권한을 허용한다.

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY      # travis repo setting 설정 값
    secret_access_key: $AWS_SECRET_KEY  # travis repo setting 설정 값
    bucket : cdsusr67       # S3 버킷
    key: spring-pet-clinic.zip
    bundle_type: zip
    application: spring-pet-clinic-cdsusr67
    deployment_group: spring-pet-clinic-group-cdsusr67 # 배포 그룹
    region: eu-west-1       
    wait-until-deployed: true
    on:                     # 해당 라인 추가 ***
      all_branches: true    # master 브랜치 말고도 다른 브랜치에도 권한을 허용한다.

      
# CI 실행 완료 시 작성한 이메일로 알람
notifications:
  email:
    recipients:
      - jinipark@naver.com